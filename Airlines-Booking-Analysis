{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8177167,"sourceType":"datasetVersion","datasetId":4840501}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-29T15:24:57.757186Z","iopub.execute_input":"2024-04-29T15:24:57.757828Z","iopub.status.idle":"2024-04-29T15:24:57.770200Z","shell.execute_reply.started":"2024-04-29T15:24:57.757791Z","shell.execute_reply":"2024-04-29T15:24:57.768880Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/airlines-booking-csv/customer_booking.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Read CSV","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/airlines-booking-csv/customer_booking.csv', encoding=\"ISO-8859-1\")","metadata":{"execution":{"iopub.status.busy":"2024-04-29T15:25:29.273338Z","iopub.execute_input":"2024-04-29T15:25:29.273836Z","iopub.status.idle":"2024-04-29T15:25:29.529816Z","shell.execute_reply.started":"2024-04-29T15:25:29.273798Z","shell.execute_reply":"2024-04-29T15:25:29.528191Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":"# Simple Exploratory Analysis","metadata":{}},{"cell_type":"code","source":"df.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-04-29T15:25:43.977448Z","iopub.execute_input":"2024-04-29T15:25:43.980594Z","iopub.status.idle":"2024-04-29T15:25:44.006075Z","shell.execute_reply.started":"2024-04-29T15:25:43.980539Z","shell.execute_reply":"2024-04-29T15:25:44.004670Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   num_passengers sales_channel  trip_type  purchase_lead  length_of_stay  \\\n0               2      Internet  RoundTrip            262              19   \n1               1      Internet  RoundTrip            112              20   \n2               2      Internet  RoundTrip            243              22   \n3               1      Internet  RoundTrip             96              31   \n4               2      Internet  RoundTrip             68              22   \n5               1      Internet  RoundTrip              3              48   \n6               3      Internet  RoundTrip            201              33   \n7               2      Internet  RoundTrip            238              19   \n8               1      Internet  RoundTrip             80              22   \n9               1        Mobile  RoundTrip            378              30   \n\n   flight_hour flight_day   route booking_origin  wants_extra_baggage  \\\n0            7        Sat  AKLDEL    New Zealand                    1   \n1            3        Sat  AKLDEL    New Zealand                    0   \n2           17        Wed  AKLDEL          India                    1   \n3            4        Sat  AKLDEL    New Zealand                    0   \n4           15        Wed  AKLDEL          India                    1   \n5           20        Thu  AKLDEL    New Zealand                    1   \n6            6        Thu  AKLDEL    New Zealand                    1   \n7           14        Mon  AKLDEL          India                    1   \n8            4        Mon  AKLDEL    New Zealand                    0   \n9           12        Sun  AKLDEL          India                    0   \n\n   wants_preferred_seat  wants_in_flight_meals  flight_duration  \\\n0                     0                      0             5.52   \n1                     0                      0             5.52   \n2                     1                      0             5.52   \n3                     0                      1             5.52   \n4                     0                      1             5.52   \n5                     0                      1             5.52   \n6                     0                      1             5.52   \n7                     0                      1             5.52   \n8                     0                      1             5.52   \n9                     0                      0             5.52   \n\n   booking_complete  \n0                 0  \n1                 0  \n2                 0  \n3                 0  \n4                 0  \n5                 0  \n6                 0  \n7                 0  \n8                 0  \n9                 0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>num_passengers</th>\n      <th>sales_channel</th>\n      <th>trip_type</th>\n      <th>purchase_lead</th>\n      <th>length_of_stay</th>\n      <th>flight_hour</th>\n      <th>flight_day</th>\n      <th>route</th>\n      <th>booking_origin</th>\n      <th>wants_extra_baggage</th>\n      <th>wants_preferred_seat</th>\n      <th>wants_in_flight_meals</th>\n      <th>flight_duration</th>\n      <th>booking_complete</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2</td>\n      <td>Internet</td>\n      <td>RoundTrip</td>\n      <td>262</td>\n      <td>19</td>\n      <td>7</td>\n      <td>Sat</td>\n      <td>AKLDEL</td>\n      <td>New Zealand</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5.52</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>Internet</td>\n      <td>RoundTrip</td>\n      <td>112</td>\n      <td>20</td>\n      <td>3</td>\n      <td>Sat</td>\n      <td>AKLDEL</td>\n      <td>New Zealand</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5.52</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>Internet</td>\n      <td>RoundTrip</td>\n      <td>243</td>\n      <td>22</td>\n      <td>17</td>\n      <td>Wed</td>\n      <td>AKLDEL</td>\n      <td>India</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>5.52</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>Internet</td>\n      <td>RoundTrip</td>\n      <td>96</td>\n      <td>31</td>\n      <td>4</td>\n      <td>Sat</td>\n      <td>AKLDEL</td>\n      <td>New Zealand</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>5.52</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>Internet</td>\n      <td>RoundTrip</td>\n      <td>68</td>\n      <td>22</td>\n      <td>15</td>\n      <td>Wed</td>\n      <td>AKLDEL</td>\n      <td>India</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>5.52</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n      <td>Internet</td>\n      <td>RoundTrip</td>\n      <td>3</td>\n      <td>48</td>\n      <td>20</td>\n      <td>Thu</td>\n      <td>AKLDEL</td>\n      <td>New Zealand</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>5.52</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3</td>\n      <td>Internet</td>\n      <td>RoundTrip</td>\n      <td>201</td>\n      <td>33</td>\n      <td>6</td>\n      <td>Thu</td>\n      <td>AKLDEL</td>\n      <td>New Zealand</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>5.52</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2</td>\n      <td>Internet</td>\n      <td>RoundTrip</td>\n      <td>238</td>\n      <td>19</td>\n      <td>14</td>\n      <td>Mon</td>\n      <td>AKLDEL</td>\n      <td>India</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>5.52</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n      <td>Internet</td>\n      <td>RoundTrip</td>\n      <td>80</td>\n      <td>22</td>\n      <td>4</td>\n      <td>Mon</td>\n      <td>AKLDEL</td>\n      <td>New Zealand</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>5.52</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1</td>\n      <td>Mobile</td>\n      <td>RoundTrip</td>\n      <td>378</td>\n      <td>30</td>\n      <td>12</td>\n      <td>Sun</td>\n      <td>AKLDEL</td>\n      <td>India</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5.52</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-29T15:25:55.001542Z","iopub.execute_input":"2024-04-29T15:25:55.002013Z","iopub.status.idle":"2024-04-29T15:25:55.071735Z","shell.execute_reply.started":"2024-04-29T15:25:55.001980Z","shell.execute_reply":"2024-04-29T15:25:55.070138Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"       num_passengers  purchase_lead  length_of_stay  flight_hour  \\\ncount    50000.000000   50000.000000     50000.00000  50000.00000   \nmean         1.591240      84.940480        23.04456      9.06634   \nstd          1.020165      90.451378        33.88767      5.41266   \nmin          1.000000       0.000000         0.00000      0.00000   \n25%          1.000000      21.000000         5.00000      5.00000   \n50%          1.000000      51.000000        17.00000      9.00000   \n75%          2.000000     115.000000        28.00000     13.00000   \nmax          9.000000     867.000000       778.00000     23.00000   \n\n       wants_extra_baggage  wants_preferred_seat  wants_in_flight_meals  \\\ncount         50000.000000          50000.000000           50000.000000   \nmean              0.668780              0.296960               0.427140   \nstd               0.470657              0.456923               0.494668   \nmin               0.000000              0.000000               0.000000   \n25%               0.000000              0.000000               0.000000   \n50%               1.000000              0.000000               0.000000   \n75%               1.000000              1.000000               1.000000   \nmax               1.000000              1.000000               1.000000   \n\n       flight_duration  booking_complete  \ncount     50000.000000      50000.000000  \nmean          7.277561          0.149560  \nstd           1.496863          0.356643  \nmin           4.670000          0.000000  \n25%           5.620000          0.000000  \n50%           7.570000          0.000000  \n75%           8.830000          0.000000  \nmax           9.500000          1.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>num_passengers</th>\n      <th>purchase_lead</th>\n      <th>length_of_stay</th>\n      <th>flight_hour</th>\n      <th>wants_extra_baggage</th>\n      <th>wants_preferred_seat</th>\n      <th>wants_in_flight_meals</th>\n      <th>flight_duration</th>\n      <th>booking_complete</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>50000.000000</td>\n      <td>50000.000000</td>\n      <td>50000.00000</td>\n      <td>50000.00000</td>\n      <td>50000.000000</td>\n      <td>50000.000000</td>\n      <td>50000.000000</td>\n      <td>50000.000000</td>\n      <td>50000.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.591240</td>\n      <td>84.940480</td>\n      <td>23.04456</td>\n      <td>9.06634</td>\n      <td>0.668780</td>\n      <td>0.296960</td>\n      <td>0.427140</td>\n      <td>7.277561</td>\n      <td>0.149560</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.020165</td>\n      <td>90.451378</td>\n      <td>33.88767</td>\n      <td>5.41266</td>\n      <td>0.470657</td>\n      <td>0.456923</td>\n      <td>0.494668</td>\n      <td>1.496863</td>\n      <td>0.356643</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>4.670000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.000000</td>\n      <td>21.000000</td>\n      <td>5.00000</td>\n      <td>5.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>5.620000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.000000</td>\n      <td>51.000000</td>\n      <td>17.00000</td>\n      <td>9.00000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>7.570000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2.000000</td>\n      <td>115.000000</td>\n      <td>28.00000</td>\n      <td>13.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>8.830000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>9.000000</td>\n      <td>867.000000</td>\n      <td>778.00000</td>\n      <td>23.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>9.500000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-29T15:26:23.781023Z","iopub.execute_input":"2024-04-29T15:26:23.781967Z","iopub.status.idle":"2024-04-29T15:26:23.837156Z","shell.execute_reply.started":"2024-04-29T15:26:23.781917Z","shell.execute_reply":"2024-04-29T15:26:23.835826Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 50000 entries, 0 to 49999\nData columns (total 14 columns):\n #   Column                 Non-Null Count  Dtype  \n---  ------                 --------------  -----  \n 0   num_passengers         50000 non-null  int64  \n 1   sales_channel          50000 non-null  object \n 2   trip_type              50000 non-null  object \n 3   purchase_lead          50000 non-null  int64  \n 4   length_of_stay         50000 non-null  int64  \n 5   flight_hour            50000 non-null  int64  \n 6   flight_day             50000 non-null  object \n 7   route                  50000 non-null  object \n 8   booking_origin         50000 non-null  object \n 9   wants_extra_baggage    50000 non-null  int64  \n 10  wants_preferred_seat   50000 non-null  int64  \n 11  wants_in_flight_meals  50000 non-null  int64  \n 12  flight_duration        50000 non-null  float64\n 13  booking_complete       50000 non-null  int64  \ndtypes: float64(1), int64(8), object(5)\nmemory usage: 5.3+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.columns","metadata":{"execution":{"iopub.status.busy":"2024-04-29T15:27:05.636953Z","iopub.execute_input":"2024-04-29T15:27:05.638118Z","iopub.status.idle":"2024-04-29T15:27:05.646293Z","shell.execute_reply.started":"2024-04-29T15:27:05.638076Z","shell.execute_reply":"2024-04-29T15:27:05.644205Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"Index(['num_passengers', 'sales_channel', 'trip_type', 'purchase_lead',\n       'length_of_stay', 'flight_hour', 'flight_day', 'route',\n       'booking_origin', 'wants_extra_baggage', 'wants_preferred_seat',\n       'wants_in_flight_meals', 'flight_duration', 'booking_complete'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-29T15:36:16.084880Z","iopub.execute_input":"2024-04-29T15:36:16.085378Z","iopub.status.idle":"2024-04-29T15:36:16.128852Z","shell.execute_reply.started":"2024-04-29T15:36:16.085339Z","shell.execute_reply":"2024-04-29T15:36:16.127237Z"},"trusted":true},"execution_count":22,"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"num_passengers           0\nsales_channel            0\ntrip_type                0\npurchase_lead            0\nlength_of_stay           0\nflight_hour              0\nflight_day               0\nroute                    0\nbooking_origin           0\nwants_extra_baggage      0\nwants_preferred_seat     0\nwants_in_flight_meals    0\nflight_duration          0\nbooking_complete         0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# Analysis of customer preferences when booking flights","metadata":{}},{"cell_type":"markdown","source":"### Examine the frequency of additional option choices, such as extra luggage, preferred seats and meals on board.","metadata":{}},{"cell_type":"code","source":"df['wants_extra_baggage'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-04-29T15:41:18.829008Z","iopub.execute_input":"2024-04-29T15:41:18.829485Z","iopub.status.idle":"2024-04-29T15:41:18.841630Z","shell.execute_reply.started":"2024-04-29T15:41:18.829449Z","shell.execute_reply":"2024-04-29T15:41:18.839656Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"wants_extra_baggage\n1    33439\n0    16561\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nplt.bar(df['wants_extra_baggage'].value_counts().index, df['wants_extra_baggage'].value_counts())\nplt.xlabel(\"Passenger wants extra baggage\")\nplt.xticks([0, 1], ['No', 'Yes'])\nplt.ylabel(\"Count\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-29T15:45:09.612745Z","iopub.execute_input":"2024-04-29T15:45:09.613252Z","iopub.status.idle":"2024-04-29T15:45:09.783392Z","shell.execute_reply.started":"2024-04-29T15:45:09.613214Z","shell.execute_reply":"2024-04-29T15:45:09.781964Z"},"_kg_hide-input":true,"trusted":true},"execution_count":48,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"plt.bar(df['wants_preferred_seat'].value_counts().index, df['wants_preferred_seat'].value_counts(), color='lightblue')\nplt.xlabel(\"Passenger wants preferred seat\")\nplt.xticks([0, 1], ['No', 'Yes'])\nplt.ylabel(\"Count\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-29T15:46:49.305837Z","iopub.execute_input":"2024-04-29T15:46:49.306245Z","iopub.status.idle":"2024-04-29T15:46:49.545581Z","shell.execute_reply.started":"2024-04-29T15:46:49.306215Z","shell.execute_reply":"2024-04-29T15:46:49.544562Z"},"_kg_hide-input":true,"trusted":true},"execution_count":52,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"plt.bar(df['wants_in_flight_meals'].value_counts().index, df['wants_in_flight_meals'].value_counts(), color='lightgreen')\nplt.xlabel(\"Passenger wants in flight meals\")\nplt.xticks([0, 1], ['No', 'Yes'])\nplt.ylabel(\"Count\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-29T15:47:30.481171Z","iopub.execute_input":"2024-04-29T15:47:30.481653Z","iopub.status.idle":"2024-04-29T15:47:30.706751Z","shell.execute_reply.started":"2024-04-29T15:47:30.481617Z","shell.execute_reply":"2024-04-29T15:47:30.705373Z"},"_kg_hide-input":true,"trusted":true},"execution_count":55,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}